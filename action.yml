name: "Kaggle GPU Test"
author: "namiyousef"
description: "Automatically test integration/gpu tests against Kaggle notebook with GPU runtime"
inputs:
  git_access_token:
    description: "GitHub secret token with read permissions"
    required: true
  kaggle_api_key:
    description: "Kaggle API key for pushing tests"
    required: true
  repository_name:
    description: "Repository owner and name, owner/name"
    required: true
  test_folder:
     description: "Folder to run pytest on"
     required: true
     default: "integration/"
  pythonversion:
     description: "version of python to use"
     required: true
     default: "3.10"
outputs:
  automatic_releases_tag:
    description: "The release tag this action just processed"
  upload_url:
    description: "The URL for uploading additional assets to the release"
runs:

  using: "composite"
  steps:
  - uses: actions/checkout@v3
  - name: Set up Python ${{ inputs.pythonversion }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.pythonversion }}
  - name: authenticate-kaggle-cli
    shell: bash
    env:
      KAGGLE_API_KEY: ${{ inputs.kaggle_api_key }}
    run: |
      cd ~
      python -c "import sys; print(sys.version)"
      mkdir .kaggle
      python -m pip install --upgrade kaggle --user
      python -c "import json, os; kaggle_api_key = os.environ.get('KAGGLE_API_KEY'); kaggle_json = json.loads(kaggle_api_key);\
      
      with open('.kaggle/kaggle.json', 'w') as f:
        json.dump(kaggle_json, f)
      "
      chmod 600 /home/runner/.kaggle/kaggle.json

    # todo here needs to create the json and store it in .kaggle/
  - name: send tests
    shell: bash
    env:
      REPO_NAME: ${{ inputs.repository_name }}
      GIT_ACCESS_TOKEN: ${{ inputs.git_access_token }}
      TEST_FOLDER: ${{ inputs.test_folder }}
    run: |
      kaggle kernels init -p ${{ github.action_path }}
      cd ${{ github.action_path }}
      python utils/prepare_job.py
      kaggle kernels push
      
  - name: check job status
    shell: bash
    env:
      REPO_NAME: ${{ inputs.repository_name }}
    run: |
      cd ${{ github.action_path }}
      python utils/worker.py
      
    #ls
      
    # authenticate kaggle cli
  #send-job:
    # use kaggle cli to send the tests
    # sends a job to Kaggle. I.e. this should create the files, send them
  
  #check-status:
    # needs to be a while loop, keeps checking until status is either success or error. Depending on this should output error
branding:
  icon: activity
  color: green
